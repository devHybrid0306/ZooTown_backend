type AggregateProject {
  count: Int!
}
type ProjectConnection {
  pageInfo: PageInfo!
  edges: [ProjectEdge]!
  aggregate: AggregateProject!
}
type Project {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  postedBy_id: String!
  company_id: String!
  postedBy: User
  company: Company
  title: String!
  description: String
  short_description: String
  duration: Int
  proposed_budget: Float
  paid_budget: Float
  attachments(where: FileWhereInput, orderBy: FileOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [File!]
  requirements: Json
  applications(where: ProjectApplicationWhereInput, orderBy: ProjectApplicationOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [ProjectApplication!]
}
input ProjectCreateInput {
  id: ID
  postedBy_id: String!
  company_id: String!
  postedBy: UserCreateOneInput
  company: CompanyCreateOneInput
  title: String!
  description: String
  short_description: String
  duration: Int
  proposed_budget: Float
  paid_budget: Float
  attachments: FileCreateManyInput
  requirements: Json
  applications: ProjectApplicationCreateManyInput
}

input ProjectCreateOneInput {
  create: ProjectCreateInput
  connect: ProjectWhereUniqueInput
}

type ProjectEdge {
  node: Project!
  cursor: String!
}

enum ProjectOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  postedBy_id_ASC
  postedBy_id_DESC
  company_id_ASC
  company_id_DESC
  title_ASC
  title_DESC
  description_ASC
  description_DESC
  short_description_ASC
  short_description_DESC
  duration_ASC
  duration_DESC
  proposed_budget_ASC
  proposed_budget_DESC
  paid_budget_ASC
  paid_budget_DESC
  requirements_ASC
  requirements_DESC
}

type ProjectPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  postedBy_id: String!
  company_id: String!
  title: String!
  description: String
  short_description: String
  duration: Int
  proposed_budget: Float
  paid_budget: Float
  requirements: Json
}

type ProjectSubscriptionPayload {
  mutation: MutationType!
  node: Project
  updatedFields: [String!]
  previousValues: ProjectPreviousValues
}

input ProjectSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: ProjectWhereInput
  AND: [ProjectSubscriptionWhereInput!]
  OR: [ProjectSubscriptionWhereInput!]
  NOT: [ProjectSubscriptionWhereInput!]
}

input ProjectUpdateDataInput {
  postedBy_id: String
  company_id: String
  postedBy: UserUpdateOneInput
  company: CompanyUpdateOneInput
  title: String
  description: String
  short_description: String
  duration: Int
  proposed_budget: Float
  paid_budget: Float
  attachments: FileUpdateManyInput
  requirements: Json
  applications: ProjectApplicationUpdateManyInput
}

input ProjectUpdateInput {
  postedBy_id: String
  company_id: String
  postedBy: UserUpdateOneInput
  company: CompanyUpdateOneInput
  title: String
  description: String
  short_description: String
  duration: Int
  proposed_budget: Float
  paid_budget: Float
  attachments: FileUpdateManyInput
  requirements: Json
  applications: ProjectApplicationUpdateManyInput
}

input ProjectUpdateManyMutationInput {
  postedBy_id: String
  company_id: String
  title: String
  description: String
  short_description: String
  duration: Int
  proposed_budget: Float
  paid_budget: Float
  requirements: Json
}

input ProjectUpdateOneRequiredInput {
  create: ProjectCreateInput
  update: ProjectUpdateDataInput
  upsert: ProjectUpsertNestedInput
  connect: ProjectWhereUniqueInput
}

input ProjectUpsertNestedInput {
  update: ProjectUpdateDataInput!
  create: ProjectCreateInput!
}

input ProjectWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  postedBy_id: String
  postedBy_id_not: String
  postedBy_id_in: [String!]
  postedBy_id_not_in: [String!]
  postedBy_id_lt: String
  postedBy_id_lte: String
  postedBy_id_gt: String
  postedBy_id_gte: String
  postedBy_id_contains: String
  postedBy_id_not_contains: String
  postedBy_id_starts_with: String
  postedBy_id_not_starts_with: String
  postedBy_id_ends_with: String
  postedBy_id_not_ends_with: String
  company_id: String
  company_id_not: String
  company_id_in: [String!]
  company_id_not_in: [String!]
  company_id_lt: String
  company_id_lte: String
  company_id_gt: String
  company_id_gte: String
  company_id_contains: String
  company_id_not_contains: String
  company_id_starts_with: String
  company_id_not_starts_with: String
  company_id_ends_with: String
  company_id_not_ends_with: String
  postedBy: UserWhereInput
  company: CompanyWhereInput
  title: String
  title_not: String
  title_in: [String!]
  title_not_in: [String!]
  title_lt: String
  title_lte: String
  title_gt: String
  title_gte: String
  title_contains: String
  title_not_contains: String
  title_starts_with: String
  title_not_starts_with: String
  title_ends_with: String
  title_not_ends_with: String
  description: String
  description_not: String
  description_in: [String!]
  description_not_in: [String!]
  description_lt: String
  description_lte: String
  description_gt: String
  description_gte: String
  description_contains: String
  description_not_contains: String
  description_starts_with: String
  description_not_starts_with: String
  description_ends_with: String
  description_not_ends_with: String
  short_description: String
  short_description_not: String
  short_description_in: [String!]
  short_description_not_in: [String!]
  short_description_lt: String
  short_description_lte: String
  short_description_gt: String
  short_description_gte: String
  short_description_contains: String
  short_description_not_contains: String
  short_description_starts_with: String
  short_description_not_starts_with: String
  short_description_ends_with: String
  short_description_not_ends_with: String
  duration: Int
  duration_not: Int
  duration_in: [Int!]
  duration_not_in: [Int!]
  duration_lt: Int
  duration_lte: Int
  duration_gt: Int
  duration_gte: Int
  proposed_budget: Float
  proposed_budget_not: Float
  proposed_budget_in: [Float!]
  proposed_budget_not_in: [Float!]
  proposed_budget_lt: Float
  proposed_budget_lte: Float
  proposed_budget_gt: Float
  proposed_budget_gte: Float
  paid_budget: Float
  paid_budget_not: Float
  paid_budget_in: [Float!]
  paid_budget_not_in: [Float!]
  paid_budget_lt: Float
  paid_budget_lte: Float
  paid_budget_gt: Float
  paid_budget_gte: Float
  attachments_every: FileWhereInput
  attachments_some: FileWhereInput
  attachments_none: FileWhereInput
  applications_every: ProjectApplicationWhereInput
  applications_some: ProjectApplicationWhereInput
  applications_none: ProjectApplicationWhereInput
  AND: [ProjectWhereInput!]
  OR: [ProjectWhereInput!]
  NOT: [ProjectWhereInput!]
}

input ProjectWhereUniqueInput {
  id: ID
}