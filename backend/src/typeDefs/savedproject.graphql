type AggregateSavedProject {
  count: Int!
}

type SavedProject {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  project_id: String
  project: Project!
  user_id: String
  user: User!
}

type SavedProjectConnection {
  pageInfo: PageInfo!
  edges: [SavedProjectEdge]!
  aggregate: AggregateSavedProject!
}

input SavedProjectCreateInput {
  id: ID
  project_id: String
  project: ProjectCreateOneInput!
  user_id: String
  user: UserCreateOneInput!
}

type SavedProjectEdge {
  node: SavedProject!
  cursor: String!
}

enum SavedProjectOrderByInput {
  id_ASC
  id_DESC
  createdAt_ASC
  createdAt_DESC
  updatedAt_ASC
  updatedAt_DESC
  project_id_ASC
  project_id_DESC
  user_id_ASC
  user_id_DESC
}

type SavedProjectPreviousValues {
  id: ID!
  createdAt: DateTime!
  updatedAt: DateTime!
  project_id: String
  user_id: String
}

type SavedProjectSubscriptionPayload {
  mutation: MutationType!
  node: SavedProject
  updatedFields: [String!]
  previousValues: SavedProjectPreviousValues
}

input SavedProjectSubscriptionWhereInput {
  mutation_in: [MutationType!]
  updatedFields_contains: String
  updatedFields_contains_every: [String!]
  updatedFields_contains_some: [String!]
  node: SavedProjectWhereInput
  AND: [SavedProjectSubscriptionWhereInput!]
  OR: [SavedProjectSubscriptionWhereInput!]
  NOT: [SavedProjectSubscriptionWhereInput!]
}

input SavedProjectUpdateInput {
  project_id: String
  project: ProjectUpdateOneRequiredInput
  user_id: String
  user: UserUpdateOneRequiredInput
}

input SavedProjectUpdateManyMutationInput {
  project_id: String
  user_id: String
}

input SavedProjectWhereInput {
  id: ID
  id_not: ID
  id_in: [ID!]
  id_not_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_gt: ID
  id_gte: ID
  id_contains: ID
  id_not_contains: ID
  id_starts_with: ID
  id_not_starts_with: ID
  id_ends_with: ID
  id_not_ends_with: ID
  createdAt: DateTime
  createdAt_not: DateTime
  createdAt_in: [DateTime!]
  createdAt_not_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  updatedAt: DateTime
  updatedAt_not: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_not_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  project_id: String
  project_id_not: String
  project_id_in: [String!]
  project_id_not_in: [String!]
  project_id_lt: String
  project_id_lte: String
  project_id_gt: String
  project_id_gte: String
  project_id_contains: String
  project_id_not_contains: String
  project_id_starts_with: String
  project_id_not_starts_with: String
  project_id_ends_with: String
  project_id_not_ends_with: String
  project: ProjectWhereInput
  user_id: String
  user_id_not: String
  user_id_in: [String!]
  user_id_not_in: [String!]
  user_id_lt: String
  user_id_lte: String
  user_id_gt: String
  user_id_gte: String
  user_id_contains: String
  user_id_not_contains: String
  user_id_starts_with: String
  user_id_not_starts_with: String
  user_id_ends_with: String
  user_id_not_ends_with: String
  user: UserWhereInput
  AND: [SavedProjectWhereInput!]
  OR: [SavedProjectWhereInput!]
  NOT: [SavedProjectWhereInput!]
}

input SavedProjectWhereUniqueInput {
  id: ID
}