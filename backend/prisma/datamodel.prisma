type Post {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  published: Boolean! @default(value: false)
  title: String!
  content: String
  author: User!
}

type User {
  id: ID! @id
  email: String! @unique
  password: String!
  first_name: String
  last_name: String
  dob: DateTime
  home_address: String
  utc_number: String
  hobbies: Json!
  student_confirm: File @relation(link: INLINE, name:"StudentConfirmRelation")
  photo_url: [File] @relation(name:"PhotoRelation")
  signup_reason: String!
  uk_citizen: Boolean! @default(value: true)
  legal_right: Boolean! @default(value: true)
  how_hear: String!
  posts: [Post!]!
  user_type: Int
  languages: Json
  education_level: Json
  job_title: String
  plan_id: String!
  plan: Plan @relation(link: INLINE)
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  isApproved: Boolean @default(value: false)
  isRecruiter: Boolean @default(value: false)
  company: Company
  degree_profile: Json
  phonenumber: String
  followers: [User] @relation(link: TABLE, name: "MyFollowers")
  following: [User] @relation(link: TABLE, name: "Following")
  notifications: [Notification!]! @relation(link: TABLE)
}

type Plan {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  name: String!
  price: Int
  description: String
  category: Int!
}

type Company {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  address: String
  logo: String
  how_hear: String
  name: String!
  recruiters: [User] @relation(link: TABLE)
}

# TODO: Add postedBy relation
type File {
  id: ID! @id
  name: String
  size: Int
  secret: String
  contentType: String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  filename: String!
  mimetype: String!
  encoding: String!
  url: String! @unique
}

type Job {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  postedBy_id: String!
  company_id: String!
  postedBy: User @relation(link: INLINE)
  company: Company @relation(link: INLINE)
  title: String!
  description: String
  short_description: String
  employment_type: String!
  type: String
  location: String
  salary: Float
  applications: [JobApplication] @relation(link: TABLE)
  attachments: [File] @relation(link: TABLE)
  requirements: Json
}

type Project {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  postedBy_id: String!
  company_id: String!
  postedBy: User @relation(link: INLINE)
  company: Company @relation(link: INLINE)
  title: String!
  description: String
  short_description: String
  duration: Int
  proposed_budget: Float
  paid_budget: Float
  attachments: [File] @relation(link: TABLE)
  requirements: Json
  applications: [ProjectApplication] @relation(link: TABLE)
}

type JobApplication {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  title: String!
  proposal: String
  attachments: [File] @relation(link: TABLE)
  user_id: String!
  user: User @relation(link: INLINE)
}

type ProjectApplication {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  title: String!
  proposal: String
  attachments: [File] @relation(link: TABLE)
  user_id: String!
  user: User
  proposed_budget: Float
  proposed_duration: String
}

type SavedJob {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  job_id: String
  job: Job! @relation(link: INLINE)
  user_id: String
  user: User! @relation(link: INLINE)
}

type SavedProject {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  project_id: String
  project: Project! @relation(link: INLINE)
  user_id: String
  user: User! @relation(link: INLINE)
}

type CvDoctor {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  attachments: [CvFile]! @relation(link: TABLE)
  user_id: String
  user: User @relation(link: INLINE)
}

type CvDoctorReply {
  id: ID! @id
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  attachments: [CvFile]! @relation(link: TABLE)
  request: CvDoctor @relation(link: INLINE)
  request_id: String!
  postedBy_id: String
  postedBy: User @relation(link: INLINE)
}

type CvFile {
  id: ID! @id
  name: String
  size: Int
  secret: String
  contentType: String
  createdAt: DateTime! @createdAt
  updatedAt: DateTime! @updatedAt
  filename: String!
  mimetype: String!
  encoding: String!
  url: String! @unique
}

type Message {
  id: ID! @id
  createdAt: DateTime!
  from: User! @relation(name: "SentMessages")
  to: User! @relation(name: "ReceivedMessages")
  deliveredAt: DateTime
  readAt: DateTime
  project: Project @relation(link: INLINE)
  job: Job @relation(link: INLINE)
}

type Notification {
  id: ID! @id
  createdAt: DateTime!
  type: NOTIFICATION_TYPE
  user: User
  link: String
  readDate: DateTime
}

enum NOTIFICATION_TYPE {
  FOLLOWED
  JOB_INVITE
  PROJECT_INVITE
  NEW_MESSAGE
  REVIEW
  ACCOUNT_ACTIVITY
  JOB_APPLIED
  PROJECT_APPLIED
}